## Extracting Topographic and Soils Variables for Section Corners 
## Author: I Shuman and L Darling
## Date modified: 28 September 2022


#Load libraries -----------

library(tidyverse)
library(tidylog)
library(magrittr)
library(sf)
library(raster)
library(spatialEco)
library(exactextractr)

setwd("D:/Management Areas")

files <- list.files("Indiana Points/")

## Main loop for computing SWI
for(i in files) {
setwd("D:/Management Areas")
#Section corners ----------
filename = paste0(i)
corner <- st_read(filename) %>%  #TODO: change for all section corners
  dplyr::select(x, y) %>% #Too many fields, grabbing a couple for simplicity
  st_transform(., crs = 3175) %>% #change to Albers Great Lake
  st_buffer(., 0.0001) #buffer to point level (buffer size is an extremely small polygon to approximate point data) 

#TODO: I am doing this by creating a small buffer around each point. We can change that buffer size
#if it is preferable. However, the zonal.stats function that I'm using to extract values requires a
#polyogon, not a point. If we want to extract point data we need to find a new function or make
#an extremely small polygon by changing the buffer size to 0.0001 or something.


#Slope --------------------

setwd("D:/Shuman Covariates 2022/Topographic Covariates")

slope <- raster('SlopeProjected.tif') 

cornerSlope <- zonal.stats(corner, slope, stats = 'mean') %>% 
  cbind(corner, .)


#Aspect -------------------

setwd("D:/Shuman Covariates 2022/Topographic Covariates")

aspect <- raster('AspectProjected.tif')

cornerSlopeAspect <- zonal.stats(corner, aspect, stats = 'mean') %>% 
  cbind(cornerSlope, .)

#Soils --------------------

#I merged the two state's soils data in QGIS and rewrote as a tif in QGIS.
#This script reads in those merged files.

setwd("D:/Shuman Covariates 2022/Soil Covariates/Lindsay's Compiled Soils Rasters")

#Load soil rasters and calculate stats
CAC <- raster('CAC.tif') %>% 
  projectRaster(., crs= '+init=epsg:3175') %>%
  zonal.stats(corner, ., stats = 'mean')

CEC <- raster('CEC.tif') %>% 
  projectRaster(., crs= '+init=epsg:3175') %>%
  zonal.stats(corner,., stats = 'mean')

CLA <- raster('CLA.tif') %>% 
  projectRaster(., crs= '+init=epsg:3175') %>%
  zonal.stats(corner,., stats = 'mean')

KSA <- raster('KSA.tif') %>% 
  projectRaster(., crs= '+init=epsg:3175') %>%
  zonal.stats(corner,., stats = 'mean')

SAN <- raster('SAN.tif') %>% 
  projectRaster(., crs= '+init=epsg:3175') %>%
  zonal.stats(corner,., stats = 'mean')

SIL <- raster('SIL.tif') %>% 
  projectRaster(., crs= '+init=epsg:3175') %>%
  zonal.stats(corner,., stats = 'mean')

WAT <- raster('WAT.tif') %>% 
  projectRaster(., crs= '+init=epsg:3175') %>%
  zonal.stats(corner,., stats = 'mean')

#Join soil data back to main df

cornerSlopeAspectSoil <- cbind(cornerSlopeAspect, CAC, CEC, CLA, KSA, SAN, SIL, WAT)
setwd("D:/Shuman Covariates 2022")
cornerSlopeAspectSoil$geometry <- NULL
name = substring(filename, 1, (nchar(filename)-11)) # Substring DEM to match with shp file name
finished_filename = paste0("D:/Shuman Covariates 2022/Indiana Slope Aspect Soil/", name,'_SlopeAspectSoil.csv') # specify shp file path
write.csv(cornerSlopeAspectSoil, finished_filename, row.names=FALSE, quote=FALSE)
setwd("D:/Management Areas")
}
